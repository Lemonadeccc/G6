{"version":3,"sources":["docs/api/reference/g6.mapnodesizeoptions.scale.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/reference/g6.mapnodesizeoptions.scale.en.md?watch=parent';\n  export const texts = [{\"value\":\"@antv/g6\",\"paraId\":0},{\"value\":\" > \",\"paraId\":1},{\"value\":\"MapNodeSizeOptions\",\"paraId\":2},{\"value\":\" > \",\"paraId\":1},{\"value\":\"scale\",\"paraId\":3},{\"value\":\"Scale type\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"'linear'\",\"paraId\":5,\"tocIndex\":0},{\"value\":\": Linear scale, maps a value from one range to another range linearly, commonly used for cases where the difference in centrality values is small\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"'log'\",\"paraId\":6,\"tocIndex\":0},{\"value\":\": Logarithmic scale, maps a value from one range to another range logarithmically, commonly used for cases where the difference in centrality values is large\",\"paraId\":6,\"tocIndex\":0},{\"value\":\"'pow'\",\"paraId\":7,\"tocIndex\":0},{\"value\":\": Power-law scale, maps a value from one range to another range using power law, commonly used for cases where the difference in centrality values is large\",\"paraId\":7,\"tocIndex\":0},{\"value\":\"'sqrt'\",\"paraId\":8,\"tocIndex\":0},{\"value\":\": Square root scale, maps a value from one range to another range using square root, commonly used for cases where the difference in centrality values is large\",\"paraId\":8,\"tocIndex\":0},{\"value\":\"Custom scale: \",\"paraId\":9,\"tocIndex\":0},{\"value\":\"(value: number, domain: [number, number], range: [number, number]) => number\",\"paraId\":9,\"tocIndex\":0},{\"value\":\"ï¼Œwhere \",\"paraId\":9,\"tocIndex\":0},{\"value\":\"value\",\"paraId\":9,\"tocIndex\":0},{\"value\":\" is the value to be mapped, \",\"paraId\":9,\"tocIndex\":0},{\"value\":\"domain\",\"paraId\":9,\"tocIndex\":0},{\"value\":\" is the input range, and \",\"paraId\":9,\"tocIndex\":0},{\"value\":\"range\",\"paraId\":9,\"tocIndex\":0},{\"value\":\" is the output range\",\"paraId\":9,\"tocIndex\":0},{\"value\":\"scale?: 'linear' | 'log' | 'pow' | 'sqrt' | ((value: number, domain: [number, number], range: [number, number]) => number);\\n\",\"paraId\":10,\"tocIndex\":0}];\n  "],"names":[],"mappings":"6PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,WAAW,OAAS,CAAC,EAAE,CAAC,MAAQ,MAAM,OAAS,CAAC,EAAE,CAAC,MAAQ,qBAAqB,OAAS,CAAC,EAAE,CAAC,MAAQ,MAAM,OAAS,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oJAAoJ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gKAAgK,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,8JAA8J,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,kKAAkK,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,iBAAiB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+EAA+E,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,eAAU,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+BAA+B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4BAA4B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,uBAAuB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gIAAgI,OAAS,GAAG,SAAW,CAAC,EAAE"}